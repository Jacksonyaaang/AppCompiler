; start main program
; -------------------------------------
;        Method Table
; -------------------------------------
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD code.Object.equals, R0
	STORE R0, 2(GB)
	LEA 1(GB), R0
	STORE R0, 3(GB)
	LOAD code.Object.equals, R0
	STORE R0, 4(GB)
	LOAD code.A.getX, R0
	STORE R0, 5(GB)
	LOAD code.A.setX, R0
	STORE R0, 6(GB)
	LOAD code.A.method, R0
	STORE R0, 7(GB)
; -------------------------------------
;        Main program
; -------------------------------------
	HALT
; -------------------------------------
;        Classes
; -------------------------------------
; ---------------------------------------------------
; ----------------- class : A -------------------
; ---------------------------------------------------
; ------------Init method for class = A--------
init.A:
	LOAD #0, R0	; loading 0  into memory to initialize field to 0
	LOAD -2(LB), R1	; loading class (this) into memory when working with field x
	STORE R0, 1(R1)	; Saving field  x into memory
	LOAD #0, R0	; loading 0  into memory to initialize field to 0
	LOAD -2(LB), R1	; loading class (this) into memory when working with field test_attribut
	STORE R0, 2(R1)	; Saving field  test_attribut into memory
	RTS
; ------------Code for method : getX with label =  code.A.getX--------
code.A.getX:
	TSTO #2
	BOV stack_overflow_error
	PUSH R3	; Pushing and poping registers used in the method
	PUSH R2	; Pushing and poping registers used in the method
;  ---------ClassBodyCodeGeneration------
; --------BeginAssignOp--------[6, 8]-----
	LOAD #5, R3	; loading 5 into memory
	LOAD -2(LB), R2	; loading parent class =  A into memory when working with field x
	STORE R3, 1(R2)	; Saving field  x into memory
; --------EndAssignOp--------[6, 8]-----
fin.A.getX:
	WSTR "Error: La méthode code.A.getX doit retourner un element"
	WNL
	ERROR
	POP R2	; Pushing and poping registers used in the method
	POP R3	; Pushing and poping registers used in the method
	RTS
; ------------Code for method : setX with label =  code.A.setX--------
code.A.setX:
	TSTO #2
	BOV stack_overflow_error
	ADDSP #1
	PUSH R2	; Pushing and poping registers used in the method
;  ---------ClassBodyCodeGeneration------
	LOAD #5, R2	; loading 5 into memory
	STORE R2, 1(LB)	; Initializing the variable alpha and loading it into memory
	WSTR "hello world"
	WNL
fin.A.setX:
	POP R2	; Pushing and poping registers used in the method
	RTS
; ------------Code for method : method with label =  code.A.method--------
code.A.method:
;  ---------ClassBodyAsmCodeGeneration------
 LOAD #2, R1
     WINT 
fin.A.method:
	RTS
; -------------------------------------
;        Method equal
; -------------------------------------
; ------------------Start generateCodeForObjectEquals location:
code.Object.equals:
	LOAD -2(LB), R0
	CMP -3(LB), R0
	SEQ R0	; Comparaison this et paramètre d'equals
fin.Object.equals:
	RTS
; -------------------------------------
;        Liste Erreur
; -------------------------------------
stack_overflow_error:
	WSTR "Error: stack_overflow_error"
	WNL
	ERROR
; end main program
