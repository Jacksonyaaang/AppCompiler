	TSTO #12
	BOV stack_overflow_error
	ADDSP #9
; start main program
; -------------------------------------
;        Method Table
; -------------------------------------
	LOAD #null, R0
	STORE R0, 6(GB)
	LOAD code.Object.equals, R0
	STORE R0, 7(GB)
	LEA 6(GB), R0
	STORE R0, 8(GB)
	LOAD code.Object.equals, R0
	STORE R0, 9(GB)
; -------------------------------------
;        Main program
; -------------------------------------
; Beginning of main instructions:
; --------StartNew--------[21, 8]-----
; [New][loadItemintoRegister] loading new of calss =  A into memory at register R2
	NEW #2, R2
	BOV heap_overflow_error
	LEA 8(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.A
	POP R2
; --------EndNew--------[21, 8]-----
	STORE R2, 1(GB)	; Initializing the variable a and loading it into memory
; --------StartNew--------[22, 8]-----
; [New][loadItemintoRegister] loading new of calss =  A into memory at register R2
	NEW #2, R2
	BOV heap_overflow_error
	LEA 8(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.A
	POP R2
; --------EndNew--------[22, 8]-----
	STORE R2, 2(GB)	; Initializing the variable b and loading it into memory
	LOAD #0x1.cp1, R2	; loading 3.5 into memory
	STORE R2, 5(GB)	; Initializing the variable f and loading it into memory
; --------BeginAssignOp--------[25, 4]-----
	LOAD #1, R3	; loading 1 into memory
	STORE R3, 3(GB)	;  Assiging a value to i
	LOAD R3, R2	;  Return value of the assignement of =iand storing it into R2
; --------EndAssignOp--------[25, 4]-----
; --------BeginAssignOp--------[26, 4]-----
	LOAD #1, R3	; loading 1 into memory
	PUSH R2
	LOAD 1(GB), R2	; loading a into memory
	STORE R3, 1(R2)	; Saving field  i into memory
	POP R2
	LOAD R3, R2	;  Return value of the assignement of =iand storing it into R2
; --------EndAssignOp--------[26, 4]-----
; --------BeginAssignOp--------[27, 4]-----
	LOAD #2, R3	; loading 2 into memory
	PUSH R2
	LOAD 2(GB), R2	; loading b into memory
	STORE R3, 1(R2)	; Saving field  i into memory
	POP R2
	LOAD R3, R2	;  Return value of the assignement of =iand storing it into R2
; --------EndAssignOp--------[27, 4]-----
; --------BeginAssignOp--------[28, 4]-----
	LOAD 2(GB), R3	; loading b into memory
	STORE R3, 1(GB)	;  Assiging a value to a
	LOAD R3, R2	;  Return value of the assignement of =aand storing it into R2
; --------EndAssignOp--------[28, 4]-----
; --------BeginSelection--------[29, 12]-----
	LOAD 1(GB), R2	; loading a into memory
	CMP #null, R2
	BEQ deref_null_error	; Checking if the class identifier is null
	LOAD 1(R2), R2	; Loading the field i into a register 
; --------BeginSelection--------[29, 12]-----
	LOAD R2, R1
	WINT
	WNL
; --------BeginAssignOp--------[30, 4]-----
	LOAD 3(GB), R3	; loading i into memory
	STORE R3, 4(GB)	;  Assiging a value to j
	LOAD R3, R2	;  Return value of the assignement of =jand storing it into R2
; --------EndAssignOp--------[30, 4]-----
	LOAD 4(GB), R2	; loading j into memory
	LOAD R2, R1
	WINT
	WNL
; --------BeginAssignOp--------[32, 4]-----
	LOAD 5(GB), R3	; loading f into memory
	INT R3, R3
	STORE R3, 4(GB)	;  Assiging a value to j
	LOAD R3, R2	;  Return value of the assignement of =jand storing it into R2
; --------EndAssignOp--------[32, 4]-----
	LOAD 4(GB), R2	; loading j into memory
	LOAD R2, R1
	WINT
	WNL
; --------BeginAssignOp--------[34, 4]-----
	LOAD 3(GB), R3	; loading i into memory
	FLOAT R3, R3
	STORE R3, 5(GB)	;  Assiging a value to f
	LOAD R3, R2	;  Return value of the assignement of =fand storing it into R2
; --------EndAssignOp--------[34, 4]-----
	LOAD 5(GB), R2	; loading f into memory
	LOAD R2, R1
	WFLOAT
	WNL
	HALT
; -------------------------------------
;        Classes
; -------------------------------------
; ---------------------------------------------------
; ----------------- class : A -------------------
; ---------------------------------------------------
; ------------Init method for class = A--------
init.A:
	LOAD #0, R0	; loading 0  into memory to initialize field to 0
	LOAD -2(LB), R1	; loading class (this) into memory when working with field i
	STORE R0, 1(R1)	; Saving field  i into memory
	RTS
; -------------------------------------
;        Method equal
; -------------------------------------
; ------------------Start generateCodeForObjectEquals location:
code.Object.equals:
	LOAD -2(LB), R0
	CMP -3(LB), R0
	SEQ R0	; Comparaison this et param√®tre d'equals
fin.Object.equals:
	RTS
init.Object:
	RTS
; -------------------------------------
;        Liste Erreur
; -------------------------------------
deref_null_error:
	WSTR "Error: deref_null_error"
	WNL
	ERROR
heap_overflow_error:
	WSTR "Error: heap_overflow_error"
	WNL
	ERROR
stack_overflow_error:
	WSTR "Error: stack_overflow_error"
	WNL
	ERROR
; end main program
