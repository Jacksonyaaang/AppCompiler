DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:37) - verify program: start
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:30) - verify Main: start
On est dans ListDeclVar.java
On est dans Identifier.java
On est dans Initialization.java
On est dans AbstractExpr.java
On est dans IntLiteral.java
On est dans Identifier.java
On est dans Initialization.java
On est dans AbstractExpr.java
On est dans FloatLiteral.java
On est dans Identifier.java
On est dans Initialization.java
On est dans AbstractExpr.java
On est dans BooleanLiteral.java
On est dans ListInst.java
On est dans StringLiteral.java
a
b
On est dans StringLiteral.java
a
b
boo
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:39) - verify Main: end
`> [10, 0] Program
   +> ListDeclClass [List with 0 elements]
   `> [10, 0] Main
      +> [13, 16] ListDeclVar [List with 3 elements]
      |  []> [11, 12] DeclVar
      |  ||  +> [11, 8] Identifier (int)
      |  ||  |  definition: type (builtin), type=int
      |  ||  +> [11, 12] Identifier (a)
      |  ||  |  definition: variable defined at [11, 12], type=int
      |  ||  `> [11, 14] Initialization
      |  ||     `> [11, 14] Int (0)
      |  ||        type: int
      |  []> [12, 14] DeclVar
      |  ||  +> [12, 8] Identifier (float)
      |  ||  |  definition: type (builtin), type=float
      |  ||  +> [12, 14] Identifier (b)
      |  ||  |  definition: variable defined at [12, 14], type=float
      |  ||  `> [12, 17] Initialization
      |  ||     `> [12, 17] Float (7.7)
      |  ||        type: float
      |  []> [13, 16] DeclVar
      |      +> [13, 8] Identifier (boolean)
      |      |  definition: type (builtin), type=boolean
      |      +> [13, 16] Identifier (boo)
      |      |  definition: variable defined at [13, 16], type=boolean
      |      `> [13, 20] Initialization
      |         `> [13, 20] BooleanLiteral (true)
      |            type: boolean
      `> ListInst [List with 3 elements]
         []> [14, 14] Print
         ||  `> ListExpr [List with 1 elements]
         ||     []> [14, 14] StringLiteral ("println(b)")
         ||         type: string
         []> [15, 16] Println
         ||  `> ListExpr [List with 2 elements]
         ||     []> [15, 16] Identifier (a)
         ||     ||  definition: variable defined at [11, 12], type=int
         ||     []> [15, 19] Identifier (b)
         ||         definition: variable defined at [12, 14], type=float
         []> [16, 14] Print
             `> ListExpr [List with 4 elements]
                []> [16, 14] StringLiteral ("very good!")
                ||  type: string
                []> [16, 27] Identifier (a)
                ||  definition: variable defined at [11, 12], type=int
                []> [16, 30] Identifier (b)
                ||  definition: variable defined at [12, 14], type=float
                []> [16, 33] Identifier (boo)
                    definition: variable defined at [13, 16], type=boolean
