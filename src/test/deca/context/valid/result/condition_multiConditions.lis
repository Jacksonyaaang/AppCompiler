DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:38) - verify program: start
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:37) - verify Main: start
DEBUG fr.ensimag.deca.tree.ListDeclVar.verifyListDeclVariable(ListDeclVar.java:52) - [ListDeclVar][verifyListDeclVariable]
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:43) - [DeclVar][verifyDecleVar] Verify a variable declaration
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:216) - [Identifier][verifyType] Verify that declaration type is correct
DEBUG fr.ensimag.deca.tree.Initialization.verifyInitialization(Initialization.java:50) - [Initialization][verifyInitialization]
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyRValue(AbstractExpr.java:162) - [AbstractExpr][verifyRValue] Verify the right expression of (implicit) assignments
DEBUG fr.ensimag.deca.tree.IntLiteral.verifyExpr(IntLiteral.java:54) - [IntLiteral][verifyExpr]
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:61) - [DeclVar] Saving a into 1(GB)
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:43) - [DeclVar][verifyDecleVar] Verify a variable declaration
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:216) - [Identifier][verifyType] Verify that declaration type is correct
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:61) - [DeclVar] Saving b into 2(GB)
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:43) - [DeclVar][verifyDecleVar] Verify a variable declaration
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:216) - [Identifier][verifyType] Verify that declaration type is correct
DEBUG fr.ensimag.deca.tree.Initialization.verifyInitialization(Initialization.java:50) - [Initialization][verifyInitialization]
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyRValue(AbstractExpr.java:162) - [AbstractExpr][verifyRValue] Verify the right expression of (implicit) assignments
DEBUG fr.ensimag.deca.tree.IntLiteral.verifyExpr(IntLiteral.java:54) - [IntLiteral][verifyExpr]
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:61) - [DeclVar] Saving c into 3(GB)
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:43) - [DeclVar][verifyDecleVar] Verify a variable declaration
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:216) - [Identifier][verifyType] Verify that declaration type is correct
DEBUG fr.ensimag.deca.tree.Initialization.verifyInitialization(Initialization.java:50) - [Initialization][verifyInitialization]
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyRValue(AbstractExpr.java:162) - [AbstractExpr][verifyRValue] Verify the right expression of (implicit) assignments
DEBUG fr.ensimag.deca.tree.IntLiteral.verifyExpr(IntLiteral.java:54) - [IntLiteral][verifyExpr]
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:61) - [DeclVar] Saving d into 4(GB)
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:43) - [DeclVar][verifyDecleVar] Verify a variable declaration
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:216) - [Identifier][verifyType] Verify that declaration type is correct
DEBUG fr.ensimag.deca.tree.Initialization.verifyInitialization(Initialization.java:50) - [Initialization][verifyInitialization]
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyRValue(AbstractExpr.java:162) - [AbstractExpr][verifyRValue] Verify the right expression of (implicit) assignments
DEBUG fr.ensimag.deca.tree.FloatLiteral.verifyExpr(FloatLiteral.java:45) - [FloatLiteral][verifyExpr]
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:61) - [DeclVar] Saving value into 5(GB)
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:43) - [DeclVar][verifyDecleVar] Verify a variable declaration
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:216) - [Identifier][verifyType] Verify that declaration type is correct
DEBUG fr.ensimag.deca.tree.Initialization.verifyInitialization(Initialization.java:50) - [Initialization][verifyInitialization]
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyRValue(AbstractExpr.java:162) - [AbstractExpr][verifyRValue] Verify the right expression of (implicit) assignments
DEBUG fr.ensimag.deca.tree.BooleanLiteral.verifyExpr(BooleanLiteral.java:49) - [BooleanLiteral][verifyExpr]
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:61) - [DeclVar] Saving m into 6(GB)
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:43) - [DeclVar][verifyDecleVar] Verify a variable declaration
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:216) - [Identifier][verifyType] Verify that declaration type is correct
DEBUG fr.ensimag.deca.tree.Initialization.verifyInitialization(Initialization.java:50) - [Initialization][verifyInitialization]
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyRValue(AbstractExpr.java:162) - [AbstractExpr][verifyRValue] Verify the right expression of (implicit) assignments
DEBUG fr.ensimag.deca.tree.BooleanLiteral.verifyExpr(BooleanLiteral.java:49) - [BooleanLiteral][verifyExpr]
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:61) - [DeclVar] Saving p into 7(GB)
DEBUG fr.ensimag.deca.tree.ListInst.verifyListInst(ListInst.java:35) - [ListInst][verifyListInst]
DEBUG fr.ensimag.deca.tree.IfThenElse.verifyInst(IfThenElse.java:48) - [IfThenElse][verifyInst] Verify the condition and the instructions of the if then else
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyCondition(AbstractExpr.java:200) - [AbstractExpr][verifyInst] Verify the condition of a While or ifEhenElse
DEBUG fr.ensimag.deca.tree.AbstractOpBool.verifyExpr(AbstractOpBool.java:44) - [AbstractOpBool][verifyExpr] Verify the boolean expressions
DEBUG fr.ensimag.deca.tree.AbstractOpBool.verifyExpr(AbstractOpBool.java:44) - [AbstractOpBool][verifyExpr] Verify the boolean expressions
DEBUG fr.ensimag.deca.tree.AbstractOpBool.verifyExpr(AbstractOpBool.java:44) - [AbstractOpBool][verifyExpr] Verify the boolean expressions
DEBUG fr.ensimag.deca.tree.AbstractOpCmp.verifyExpr(AbstractOpCmp.java:33) - [AbstractOpCmp][verifyExpr] Verify the comparison expressions
DEBUG fr.ensimag.deca.tree.BooleanLiteral.verifyExpr(BooleanLiteral.java:49) - [BooleanLiteral][verifyExpr]
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:199) - [Identifier][verifyExpr]
DEBUG fr.ensimag.deca.tree.AbstractOpCmp.verifyExpr(AbstractOpCmp.java:41) - [AbstractOpCmp][verifyExpr] verify type left operand:boolean
DEBUG fr.ensimag.deca.tree.AbstractOpCmp.verifyExpr(AbstractOpCmp.java:42) - [AbstractOpCmp][verifyExpr] verify type right operand:boolean
DEBUG fr.ensimag.deca.tree.AbstractOpCmp.verifyExpr(AbstractOpCmp.java:33) - [AbstractOpCmp][verifyExpr] Verify the comparison expressions
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:199) - [Identifier][verifyExpr]
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:199) - [Identifier][verifyExpr]
DEBUG fr.ensimag.deca.tree.AbstractOpCmp.verifyExpr(AbstractOpCmp.java:41) - [AbstractOpCmp][verifyExpr] verify type left operand:int
DEBUG fr.ensimag.deca.tree.AbstractOpCmp.verifyExpr(AbstractOpCmp.java:42) - [AbstractOpCmp][verifyExpr] verify type right operand:int
DEBUG fr.ensimag.deca.tree.AbstractOpBool.verifyExpr(AbstractOpBool.java:44) - [AbstractOpBool][verifyExpr] Verify the boolean expressions
DEBUG fr.ensimag.deca.tree.AbstractOpCmp.verifyExpr(AbstractOpCmp.java:33) - [AbstractOpCmp][verifyExpr] Verify the comparison expressions
DEBUG fr.ensimag.deca.tree.IntLiteral.verifyExpr(IntLiteral.java:54) - [IntLiteral][verifyExpr]
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:199) - [Identifier][verifyExpr]
DEBUG fr.ensimag.deca.tree.AbstractOpCmp.verifyExpr(AbstractOpCmp.java:41) - [AbstractOpCmp][verifyExpr] verify type left operand:float
DEBUG fr.ensimag.deca.tree.AbstractOpCmp.verifyExpr(AbstractOpCmp.java:42) - [AbstractOpCmp][verifyExpr] verify type right operand:int
DEBUG fr.ensimag.deca.tree.ConvFloat.verifyExpr(ConvFloat.java:31) - [ConvFloat][verifyExpr]
DEBUG fr.ensimag.deca.tree.AbstractOpCmp.verifyExpr(AbstractOpCmp.java:33) - [AbstractOpCmp][verifyExpr] Verify the comparison expressions
DEBUG fr.ensimag.deca.tree.BooleanLiteral.verifyExpr(BooleanLiteral.java:49) - [BooleanLiteral][verifyExpr]
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:199) - [Identifier][verifyExpr]
DEBUG fr.ensimag.deca.tree.AbstractOpCmp.verifyExpr(AbstractOpCmp.java:41) - [AbstractOpCmp][verifyExpr] verify type left operand:boolean
DEBUG fr.ensimag.deca.tree.AbstractOpCmp.verifyExpr(AbstractOpCmp.java:42) - [AbstractOpCmp][verifyExpr] verify type right operand:boolean
DEBUG fr.ensimag.deca.tree.AbstractOpCmp.verifyExpr(AbstractOpCmp.java:33) - [AbstractOpCmp][verifyExpr] Verify the comparison expressions
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:199) - [Identifier][verifyExpr]
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:199) - [Identifier][verifyExpr]
DEBUG fr.ensimag.deca.tree.AbstractOpCmp.verifyExpr(AbstractOpCmp.java:41) - [AbstractOpCmp][verifyExpr] verify type left operand:int
DEBUG fr.ensimag.deca.tree.AbstractOpCmp.verifyExpr(AbstractOpCmp.java:42) - [AbstractOpCmp][verifyExpr] verify type right operand:int
DEBUG fr.ensimag.deca.tree.ListInst.verifyListInst(ListInst.java:35) - [ListInst][verifyListInst]
DEBUG fr.ensimag.deca.tree.ListInst.verifyListInst(ListInst.java:35) - [ListInst][verifyListInst]
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:46) - verify Main: end
DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:40) - verify program: end
`> [9, 0] Program
   +> ListDeclClass [List with 0 elements]
   `> [9, 0] Main
      +> [14, 9] ListDeclVar [List with 7 elements]
      |  []> [10, 5] DeclVar
      |  ||  +> [10, 1] Identifier (int)
      |  ||  |  definition: type (builtin), type=int
      |  ||  +> [10, 5] Identifier (a)
      |  ||  |  definition: variable defined at [10, 5], type=int
      |  ||  `> [10, 7] Initialization
      |  ||     `> [10, 7] Int (0)
      |  ||        type: int
      |  []> [11, 5] DeclVar
      |  ||  +> [11, 1] Identifier (int)
      |  ||  |  definition: type (builtin), type=int
      |  ||  +> [11, 5] Identifier (b)
      |  ||  |  definition: variable defined at [11, 5], type=int
      |  ||  `> NoInitialization
      |  []> [11, 7] DeclVar
      |  ||  +> [11, 1] Identifier (int)
      |  ||  |  definition: type (builtin), type=int
      |  ||  +> [11, 7] Identifier (c)
      |  ||  |  definition: variable defined at [11, 7], type=int
      |  ||  `> [11, 9] Initialization
      |  ||     `> [11, 9] Int (6)
      |  ||        type: int
      |  []> [11, 11] DeclVar
      |  ||  +> [11, 1] Identifier (int)
      |  ||  |  definition: type (builtin), type=int
      |  ||  +> [11, 11] Identifier (d)
      |  ||  |  definition: variable defined at [11, 11], type=int
      |  ||  `> [11, 13] Initialization
      |  ||     `> [11, 13] Int (9)
      |  ||        type: int
      |  []> [12, 7] DeclVar
      |  ||  +> [12, 1] Identifier (float)
      |  ||  |  definition: type (builtin), type=float
      |  ||  +> [12, 7] Identifier (value)
      |  ||  |  definition: variable defined at [12, 7], type=float
      |  ||  `> [12, 13] Initialization
      |  ||     `> [12, 13] Float (7.999)
      |  ||        type: float
      |  []> [13, 9] DeclVar
      |  ||  +> [13, 1] Identifier (boolean)
      |  ||  |  definition: type (builtin), type=boolean
      |  ||  +> [13, 9] Identifier (m)
      |  ||  |  definition: variable defined at [13, 9], type=boolean
      |  ||  `> [13, 14] Initialization
      |  ||     `> [13, 14] BooleanLiteral (true)
      |  ||        type: boolean
      |  []> [14, 9] DeclVar
      |      +> [14, 1] Identifier (boolean)
      |      |  definition: type (builtin), type=boolean
      |      +> [14, 9] Identifier (p)
      |      |  definition: variable defined at [14, 9], type=boolean
      |      `> [14, 14] Initialization
      |         `> [14, 14] BooleanLiteral (false)
      |            type: boolean
      `> ListInst [List with 1 elements]
         []> [15, 1] IfThenElse
             +> [15, 5] Or
             |  type: boolean
             |  +> [15, 5] Equals
             |  |  type: boolean
             |  |  +> [15, 5] Identifier (a)
             |  |  |  definition: variable defined at [10, 5], type=int
             |  |  `> [15, 8] Identifier (d)
             |  |     definition: variable defined at [11, 11], type=int
             |  `> [15, 11] And
             |     type: boolean
             |     +> [15, 11] And
             |     |  type: boolean
             |     |  +> [15, 11] Equals
             |     |  |  type: boolean
             |     |  |  +> [15, 11] Identifier (m)
             |     |  |  |  definition: variable defined at [13, 9], type=boolean
             |     |  |  `> [15, 14] BooleanLiteral (true)
             |     |  |     type: boolean
             |     |  `> [15, 21] NotEquals
             |     |     type: boolean
             |     |     +> [15, 21] Identifier (value)
             |     |     |  definition: variable defined at [12, 7], type=float
             |     |     `> ConvFloat
             |     |        type: float
             |     |        `> [15, 28] Int (8)
             |     |           type: int
             |     `> [15, 32] Or
             |        type: boolean
             |        +> [15, 32] NotEquals
             |        |  type: boolean
             |        |  +> [15, 32] Identifier (c)
             |        |  |  definition: variable defined at [11, 7], type=int
             |        |  `> [15, 35] Identifier (a)
             |        |     definition: variable defined at [10, 5], type=int
             |        `> [15, 38] Equals
             |           type: boolean
             |           +> [15, 38] Identifier (p)
             |           |  definition: variable defined at [14, 9], type=boolean
             |           `> [15, 41] BooleanLiteral (false)
             |              type: boolean
             +> ListInst [List with 0 elements]
             `> ListInst [List with 0 elements]
