DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:38) - verify program: start
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:37) - verify Main: start
DEBUG fr.ensimag.deca.tree.ListDeclVar.verifyListDeclVariable(ListDeclVar.java:54) - [ListDeclVar][verifyListDeclVariable]
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:43) - [DeclVar][verifyDecleVar] Verify a variable declaration
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:216) - [Identifier][verifyType] Verify that declaration type is correct
DEBUG fr.ensimag.deca.tree.Initialization.verifyInitialization(Initialization.java:50) - [Initialization][verifyInitialization]
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyRValue(AbstractExpr.java:162) - [AbstractExpr][verifyRValue] Verify the right expression of (implicit) assignments
DEBUG fr.ensimag.deca.tree.IntLiteral.verifyExpr(IntLiteral.java:54) - [IntLiteral][verifyExpr]
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:61) - [DeclVar] Saving aI into 1(GB)
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:43) - [DeclVar][verifyDecleVar] Verify a variable declaration
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:216) - [Identifier][verifyType] Verify that declaration type is correct
DEBUG fr.ensimag.deca.tree.Initialization.verifyInitialization(Initialization.java:50) - [Initialization][verifyInitialization]
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyRValue(AbstractExpr.java:162) - [AbstractExpr][verifyRValue] Verify the right expression of (implicit) assignments
DEBUG fr.ensimag.deca.tree.IntLiteral.verifyExpr(IntLiteral.java:54) - [IntLiteral][verifyExpr]
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:61) - [DeclVar] Saving bI into 2(GB)
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:43) - [DeclVar][verifyDecleVar] Verify a variable declaration
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:216) - [Identifier][verifyType] Verify that declaration type is correct
DEBUG fr.ensimag.deca.tree.Initialization.verifyInitialization(Initialization.java:50) - [Initialization][verifyInitialization]
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyRValue(AbstractExpr.java:162) - [AbstractExpr][verifyRValue] Verify the right expression of (implicit) assignments
DEBUG fr.ensimag.deca.tree.FloatLiteral.verifyExpr(FloatLiteral.java:45) - [FloatLiteral][verifyExpr]
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:61) - [DeclVar] Saving aF into 3(GB)
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:43) - [DeclVar][verifyDecleVar] Verify a variable declaration
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:216) - [Identifier][verifyType] Verify that declaration type is correct
DEBUG fr.ensimag.deca.tree.Initialization.verifyInitialization(Initialization.java:50) - [Initialization][verifyInitialization]
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyRValue(AbstractExpr.java:162) - [AbstractExpr][verifyRValue] Verify the right expression of (implicit) assignments
DEBUG fr.ensimag.deca.tree.FloatLiteral.verifyExpr(FloatLiteral.java:45) - [FloatLiteral][verifyExpr]
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:61) - [DeclVar] Saving bF into 4(GB)
DEBUG fr.ensimag.deca.tree.ListInst.verifyListInst(ListInst.java:35) - [ListInst][verifyListInst]
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyInst(AbstractExpr.java:184) - [AbstractExpr][verifyInst] Verify the expression coming from the instruction
DEBUG fr.ensimag.deca.tree.Assign.verifyExpr(Assign.java:75) - [Assign][verifyExpr] Verify left and right expression in assignment
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:199) - [Identifier][verifyExpr]
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyRValue(AbstractExpr.java:162) - [AbstractExpr][verifyRValue] Verify the right expression of (implicit) assignments
DEBUG fr.ensimag.deca.tree.AbstractOpArith.verifyExpr(AbstractOpArith.java:38) - [AbstractOpArith][verifyExpr] Verify the arithmetic expressions
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:199) - [Identifier][verifyExpr]
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:199) - [Identifier][verifyExpr]
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyInst(AbstractExpr.java:184) - [AbstractExpr][verifyInst] Verify the expression coming from the instruction
DEBUG fr.ensimag.deca.tree.Assign.verifyExpr(Assign.java:75) - [Assign][verifyExpr] Verify left and right expression in assignment
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:199) - [Identifier][verifyExpr]
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyRValue(AbstractExpr.java:162) - [AbstractExpr][verifyRValue] Verify the right expression of (implicit) assignments
DEBUG fr.ensimag.deca.tree.AbstractOpArith.verifyExpr(AbstractOpArith.java:38) - [AbstractOpArith][verifyExpr] Verify the arithmetic expressions
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:199) - [Identifier][verifyExpr]
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:199) - [Identifier][verifyExpr]
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyInst(AbstractExpr.java:184) - [AbstractExpr][verifyInst] Verify the expression coming from the instruction
DEBUG fr.ensimag.deca.tree.Assign.verifyExpr(Assign.java:75) - [Assign][verifyExpr] Verify left and right expression in assignment
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:199) - [Identifier][verifyExpr]
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyRValue(AbstractExpr.java:162) - [AbstractExpr][verifyRValue] Verify the right expression of (implicit) assignments
DEBUG fr.ensimag.deca.tree.AbstractOpArith.verifyExpr(AbstractOpArith.java:38) - [AbstractOpArith][verifyExpr] Verify the arithmetic expressions
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:199) - [Identifier][verifyExpr]
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:199) - [Identifier][verifyExpr]
DEBUG fr.ensimag.deca.tree.AbstractOpArith.verifyExpr(AbstractOpArith.java:52) - [AbstractOpArith][verifyExpr] Right operand float conversion
DEBUG fr.ensimag.deca.tree.ConvFloat.verifyExpr(ConvFloat.java:31) - [ConvFloat][verifyExpr]
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyInst(AbstractExpr.java:184) - [AbstractExpr][verifyInst] Verify the expression coming from the instruction
DEBUG fr.ensimag.deca.tree.Assign.verifyExpr(Assign.java:75) - [Assign][verifyExpr] Verify left and right expression in assignment
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:199) - [Identifier][verifyExpr]
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyRValue(AbstractExpr.java:162) - [AbstractExpr][verifyRValue] Verify the right expression of (implicit) assignments
DEBUG fr.ensimag.deca.tree.AbstractOpArith.verifyExpr(AbstractOpArith.java:38) - [AbstractOpArith][verifyExpr] Verify the arithmetic expressions
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:199) - [Identifier][verifyExpr]
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:199) - [Identifier][verifyExpr]
DEBUG fr.ensimag.deca.tree.AbstractOpArith.verifyExpr(AbstractOpArith.java:60) - [AbstractOpArith][verifyExpr] Left operand float conversion
DEBUG fr.ensimag.deca.tree.ConvFloat.verifyExpr(ConvFloat.java:31) - [ConvFloat][verifyExpr]
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:46) - verify Main: end
DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:40) - verify program: end
`> [6, 0] Program
   +> ListDeclClass [List with 0 elements]
   `> [6, 0] Main
      +> ListDeclVar [List with 4 elements]
      |  []> [7, 5] DeclVar
      |  ||  +> [7, 1] Identifier (int)
      |  ||  |  definition: type (builtin), type=int
      |  ||  +> [7, 5] Identifier (aI)
      |  ||  |  definition: variable defined at [7, 5], type=int
      |  ||  `> [7, 10] Initialization
      |  ||     `> [7, 10] Int (0)
      |  ||        type: int
      |  []> [8, 5] DeclVar
      |  ||  +> [8, 1] Identifier (int)
      |  ||  |  definition: type (builtin), type=int
      |  ||  +> [8, 5] Identifier (bI)
      |  ||  |  definition: variable defined at [8, 5], type=int
      |  ||  `> [8, 10] Initialization
      |  ||     `> [8, 10] Int (1)
      |  ||        type: int
      |  []> [9, 7] DeclVar
      |  ||  +> [9, 1] Identifier (float)
      |  ||  |  definition: type (builtin), type=float
      |  ||  +> [9, 7] Identifier (aF)
      |  ||  |  definition: variable defined at [9, 7], type=float
      |  ||  `> [9, 12] Initialization
      |  ||     `> [9, 12] Float (1.5)
      |  ||        type: float
      |  []> [10, 7] DeclVar
      |      +> [10, 1] Identifier (float)
      |      |  definition: type (builtin), type=float
      |      +> [10, 7] Identifier (bF)
      |      |  definition: variable defined at [10, 7], type=float
      |      `> [10, 12] Initialization
      |         `> [10, 12] Float (2.5)
      |            type: float
      `> ListInst [List with 4 elements]
         []> [12, 1] Assign
         ||  type: int
         ||  +> [12, 1] Identifier (aI)
         ||  |  definition: variable defined at [7, 5], type=int
         ||  `> [12, 6] Plus
         ||     type: int
         ||     +> [12, 6] Identifier (aI)
         ||     |  definition: variable defined at [7, 5], type=int
         ||     `> [12, 11] Identifier (bI)
         ||        definition: variable defined at [8, 5], type=int
         []> [14, 1] Assign
         ||  type: float
         ||  +> [14, 1] Identifier (aF)
         ||  |  definition: variable defined at [9, 7], type=float
         ||  `> [14, 6] Plus
         ||     type: float
         ||     +> [14, 6] Identifier (aF)
         ||     |  definition: variable defined at [9, 7], type=float
         ||     `> [14, 11] Identifier (bF)
         ||        definition: variable defined at [10, 7], type=float
         []> [16, 1] Assign
         ||  type: float
         ||  +> [16, 1] Identifier (aF)
         ||  |  definition: variable defined at [9, 7], type=float
         ||  `> [16, 6] Plus
         ||     type: float
         ||     +> [16, 6] Identifier (aF)
         ||     |  definition: variable defined at [9, 7], type=float
         ||     `> ConvFloat
         ||        type: float
         ||        `> [16, 11] Identifier (aI)
         ||           definition: variable defined at [7, 5], type=int
         []> [18, 1] Assign
             type: float
             +> [18, 1] Identifier (aF)
             |  definition: variable defined at [9, 7], type=float
             `> [18, 6] Plus
                type: float
                +> ConvFloat
                |  type: float
                |  `> [18, 6] Identifier (aI)
                |     definition: variable defined at [7, 5], type=int
                `> [18, 11] Identifier (aF)
                   definition: variable defined at [9, 7], type=float
