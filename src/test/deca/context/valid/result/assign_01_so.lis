DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:38) - verify program: start
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:36) - verify Main: start
DEBUG fr.ensimag.deca.tree.ListDeclVar.verifyListDeclVariable(ListDeclVar.java:52) - [ListDeclVar][verifyListDeclVariable]
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:43) - [DeclVar][verifyDecleVar] Verify a variable declaration
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:214) - [Identifier][verifyType] Verify that declaration type is correct
DEBUG fr.ensimag.deca.tree.Initialization.verifyInitialization(Initialization.java:50) - [Initialization][verifyInitialization]
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyRValue(AbstractExpr.java:146) - [AbstractExpr][verifyRValue] Verify the right expression of (implicit) assignments
DEBUG fr.ensimag.deca.tree.IntLiteral.verifyExpr(IntLiteral.java:57) - [IntLiteral][verifyExpr]
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:58) - Saving a into 1(GB)
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:43) - [DeclVar][verifyDecleVar] Verify a variable declaration
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:214) - [Identifier][verifyType] Verify that declaration type is correct
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:58) - Saving b into 2(GB)
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:43) - [DeclVar][verifyDecleVar] Verify a variable declaration
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:214) - [Identifier][verifyType] Verify that declaration type is correct
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:58) - Saving f into 3(GB)
DEBUG fr.ensimag.deca.tree.ListInst.verifyListInst(ListInst.java:35) - [ListInst][verifyListInst]
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyInst(AbstractExpr.java:168) - [AbstractExpr][verifyInst] Verify the expression coming from the instruction
DEBUG fr.ensimag.deca.tree.Assign.verifyExpr(Assign.java:66) - [Assign][verifyExpr] Verify left and right expression in assignment
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:197) - [Identifier][verifyExpr]
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyRValue(AbstractExpr.java:146) - [AbstractExpr][verifyRValue] Verify the right expression of (implicit) assignments
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:197) - [Identifier][verifyExpr]
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyInst(AbstractExpr.java:168) - [AbstractExpr][verifyInst] Verify the expression coming from the instruction
DEBUG fr.ensimag.deca.tree.Assign.verifyExpr(Assign.java:66) - [Assign][verifyExpr] Verify left and right expression in assignment
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:197) - [Identifier][verifyExpr]
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyRValue(AbstractExpr.java:146) - [AbstractExpr][verifyRValue] Verify the right expression of (implicit) assignments
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:197) - [Identifier][verifyExpr]
DEBUG fr.ensimag.deca.tree.ConvFloat.verifyExpr(ConvFloat.java:25) - [ConvFloat][verifyExpr]
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyRValue(AbstractExpr.java:154) - [Assign][verifyExpr] Conv int -> float
DEBUG fr.ensimag.deca.tree.AbstractPrint.verifyInst(AbstractPrint.java:46) - [AbstractPrint][verifyInst] Verify the expressions in the print instruction
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:197) - [Identifier][verifyExpr]
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:45) - verify Main: end
DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:40) - verify program: end
`> [10, 0] Program
   +> ListDeclClass [List with 0 elements]
   `> [10, 0] Main
      +> [13, 6] ListDeclVar [List with 3 elements]
      |  []> [11, 4] DeclVar
      |  ||  +> [11, 0] Identifier (int)
      |  ||  |  definition: type (builtin), type=int
      |  ||  +> [11, 4] Identifier (a)
      |  ||  |  definition: variable defined at [11, 4], type=int
      |  ||  `> [11, 8] Initialization
      |  ||     `> [11, 8] Int (5)
      |  ||        type: int
      |  []> [12, 4] DeclVar
      |  ||  +> [12, 0] Identifier (int)
      |  ||  |  definition: type (builtin), type=int
      |  ||  +> [12, 4] Identifier (b)
      |  ||  |  definition: variable defined at [12, 4], type=int
      |  ||  `> NoInitialization
      |  []> [13, 6] DeclVar
      |      +> [13, 0] Identifier (float)
      |      |  definition: type (builtin), type=float
      |      +> [13, 6] Identifier (f)
      |      |  definition: variable defined at [13, 6], type=float
      |      `> NoInitialization
      `> ListInst [List with 3 elements]
         []> [14, 0] Assign
         ||  type: int
         ||  +> [14, 0] Identifier (b)
         ||  |  definition: variable defined at [12, 4], type=int
         ||  `> [14, 4] Identifier (a)
         ||     definition: variable defined at [11, 4], type=int
         []> [15, 0] Assign
         ||  type: float
         ||  +> [15, 0] Identifier (f)
         ||  |  definition: variable defined at [13, 6], type=float
         ||  `> ConvFloat
         ||     type: float
         ||     `> [15, 4] Identifier (b)
         ||        definition: variable defined at [12, 4], type=int
         []> [16, 6] Print
             `> ListExpr [List with 1 elements]
                []> [16, 6] Identifier (f)
                    definition: variable defined at [13, 6], type=float
